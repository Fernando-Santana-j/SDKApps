<!DOCTYPE html>
<html>

<head>
    <%- include('./reusable/head.ejs') %>
        <title>SDK - Personalizar</title>
        <link rel="stylesheet" href="/public/css/personalize.css">
</head>

<body>
    <div id="body-containner">

        <div id="containner">
            <%- include('./reusable/body.ejs',{index:4}) %>
                <main id="main-containner">
                    <h1 class="title-col">Modifique o seu bot da maneira que desejar!</h1>
                    <p class="desc-col">As alterações são salvas assim que modificadas!</p>
                    <div id="main-content-row">
                        <div class="itens-col">
                            <h1 class="title-col">Cor destaque</h1>
                            <p class="desc-col">Isso modifica as cores principais quando o bot enviar uma mensagem!</p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col">
                                <label for="color-dest-input" id="color-dest-preview"></label>
                                <input type="color" id="color-dest-input" hidden>
                            </div>
                        </div>
                        <div class="itens-col">
                            <h1 class="title-col">Cargo de comprador</h1>
                            <p class="desc-col">⚠ O cargo do bot tem que está acima do cargo que sera dado ao usuario!
                            </p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col">
                                <input required type="text" class="input-padrao" list="cargos-input-list"
                                    placeholder="Pesquise o cargo..." id="cargos-name-input">
                                <datalist id="cargos-input-list">
                                    <% cargos.forEach(element=> { %>
                                        <option data-cargos="<%= element.id %>" value="<%= element.name %>"></option>
                                        <% }) %>
                                </datalist>
                                <button id="saveCargoPay" class="button-padrao">Salvar Cargo</button>
                            </div>
                        </div>
                        <!-- <div class="itens-col">
                        <h1 class="title-col">Nome do bot</h1>
                        <p class="desc-col">Nome de exibição do bot em seu servidor!</p>
                        <div class="linha" style="margin-top: 1em;"></div>
                        <div class="itens-content-col">
                            <input required type="text" class="input-padrao" placeholder="Nome" id="bot-name-input">
                            <button id="saveBotName" class="button-padrao">Salvar Nome</button>
                        </div>
                    </div> -->
                        <!-- <div class="itens-col">
                        <h1 class="title-col">Avatar do bot</h1>
                        <p class="desc-col">Imagem de exibição do bot em seu servidor!</p>
                        <div class="linha" style="margin-top: 1em;"></div>
                        <div class="itens-content-col">
                            <label id="lableAvatar" for="avatarBotPerso">
                                <img src="/public/img/LOGOFUNDO.png" id="avatarPreview">
                                <input type="file" accept=".jpg, .jpeg, .png" style="opacity: 0; position: absolute; top: -200%;" hidden id="avatarBotPerso">
                            </label>
                        </div>
                    </div> -->

                        <div class="itens-col">
                            <h1 class="title-col">Icone na mensagem do produto</h1>
                            <p class="desc-col">Caso essa opção esteja ativa ao criar um novo produto ou enviar uma nova
                                mensagem não ira aparecer o icone do produto (Apenas na embend de mensagem)! </p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col"
                                style="width: 100%; display: flex; align-items: center; justify-content: center; flex-direction: column; text-align: center; gap: 1em;">
                                <label for="product-icon" class="lable-padrao">Ative ou desative a exibição do icone
                                    abaixo!</label>
                                <label id="product-icon" for="checkbox" style="text-align: center;" class="switch">
                                    <input id="checkbox" <%='personalize' in server && 'iconProduct' in
                                        server.personalize ? server.personalize.iconProduct==true ? 'checked' : ''
                                        : 'checked' %> type="checkbox">
                                    <span class="slider round"></span>
                                </label>
                            </div>
                        </div>
                        <div class="itens-col">
                            <h1 class="title-col">Canal do feedback</h1>
                            <p class="desc-col">Canal aonde o usuario ira escrever o feedback sobre um produto!</p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col">
                                <input required type="text" class="input-padrao" list="feedback-channel-list"
                                    placeholder="Pesquise o cargo..." id="feedback-channel-input">
                                <datalist id="feedback-channel-list">
                                    <% channels.forEach(element=> { %>
                                        <option data-channel="<%= element.id %>" value="<%= element.name %>"></option>
                                        <% }) %>
                                </datalist>
                                <button id="saveChannelFeedback" class="button-padrao">Salvar canal</button>
                            </div>
                        </div>

                        <div class="itens-col">
                            <h1 class="title-col">Mensagem de lembrete</h1>
                            <p class="desc-col">Configure uma mensagem para ser enviada no privado do usuario quando ele
                                não concluir uma compra!</p>

                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col"
                                style="width: 100%; display: flex; align-items: center; justify-content: center; flex-direction: column; text-align: center; gap: 1em;">
                                <% if ('personalize' in server && 'lembreteMensage' in server.personalize) { %>
                                    <div id="buttons-active-desactive-lembrete">
                                        <label for="" class="lable-padrao">Ativar ou desativar a mensagem de boas
                                            vindas!</label>
                                        <button id="desative-lembrete"
                                            class="button-padrao redColor <%= server.personalize.lembreteMensage.active == true ? '' : 'hidden' %>">Desativar
                                            lembrete</button>
                                        <button id="active-lembrete"
                                            class="button-padrao greenColor <%= server.personalize.lembreteMensage.active == true ? 'hidden' : '' %>">Ativar
                                            lembrete</button>
                                    </div>
                                    <% } %>
                                        <div class="inputs-col-content">
                                            <label for="title-lembrete" class="lable-padrao">Titulo da mensagem!</label>
                                            <input required type="text"
                                                value="<%= 'personalize' in server && 'lembreteMensage' in server.personalize ? server.personalize.lembreteMensage.title :''%>"
                                                class="input-padrao" placeholder="Titulo" id="title-lembrete">
                                        </div>
                                        <div class="inputs-col-content">
                                            <label for="mensage-lembrete" class="lable-padrao">Mensagem de boas
                                                vindas!</label>
                                            <input required type="text"
                                                value="<%= 'personalize' in server && 'lembreteMensage' in server.personalize ? server.personalize.lembreteMensage.mensage :''%>"
                                                class="input-padrao" placeholder="Mensagem" id="mensage-lembrete">
                                        </div>
                                        <button id="save-mensage-lembrete" class="button-padrao">Salvar
                                            Mensagem</button>

                            </div>
                        </div>
                        <div class="itens-col">
                            <h1 class="title-col">Auto reação</h1>
                            <p class="desc-col">Selecione um canal e para o bot reagir a todas as mensagens com um
                                emoji!</p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col">
                                <div class="inputs-col-content">
                                    <label for="emoji-name-react" class="lable-padrao">Nome do emoji!</label>
                                    <input required type="text" class="input-padrao" placeholder="EX: :nome: ou ❤️"
                                        id="emoji-name-react">
                                </div>
                                <div class="inputs-col-content">
                                    <label for="select-channel-react-containner" class="lable-padrao">Canal da
                                        reação!</label>
                                    <div id="select-channel-react-containner"></div>
                                </div>
                                <button id="save-auto-react" class="button-padrao">Salvar reação</button>
                            </div>
                        </div>
                        <div class="itens-col">
                            <h1 class="title-col">Repostagem de produtos</h1>
                            <p class="desc-col">Selecione um horario para repostar todos os produtos!</p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col">
                                <div class="inputs-col-content">
                                    <label for="min-days-fake" class="lable-padrao">Hora do dia que sera feita a repostagem: </label>
                                    <div id="select-hour-repost-containner">

                                    </div>
                                </div>
                                <button id="save-repost" class="button-padrao">Salvar repostagem</button>
                            </div>
                        </div>
                        <div class="itens-col">
                            <h1 class="title-col">AntiFake</h1>
                            <p class="desc-col">Usuarios fakes detectados com os parametros abaixos seram kickados!</p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col">
                                <div class="inputs-col-content">
                                    <label for="min-days-fake" class="lable-padrao">Dias mínimos da criação da
                                        conta!</label>
                                    <input required type="number" class="input-padrao" placeholder="Numero de dias"
                                        value="<%= 'personalize' in server && 'antifake' in server.personalize ? server.personalize.antifake.antifakeDays : '' %>"
                                        id="min-days-fake">
                                </div>
                                <div class="inputs-col-content">
                                    <label for="names-block-fake" class="lable-padrao">Nomes bloqueados!</label>
                                    <textarea required placeholder="Digite os nomes separados por virgula"
                                        class="input-padrao" id="names-block-fake"
                                        style="height: 5em;"> <%= 'personalize' in server && 'antifake' in server.personalize ? server.personalize.antifake.antifakeNames : '' %></textarea>
                                </div>
                                <button id="save-antifake" class="button-padrao">Salvar antifake</button>
                            </div>
                        </div>
                        <div class="itens-col" style="width: 90% !important;">
                            <h1 class="title-col">Mensagem de boas vindas</h1>
                            <p class="desc-col">Crie uma mensagem de boas vindas no seu server use os comandos abaixo no
                                titulo ou na mensagem: <br>@@server para exibir o nome do servidor<br>@@username para
                                exibir o username do usuario que entrou<br>@@globalname para exibir o nome global do
                                usuario que entrou</p>
                            <div class="linha" style="margin-top: 1em;"></div>
                            <div class="itens-content-col" id="welcome-full-containner"
                                style="width: 100%; display: flex; justify-content: space-between; flex-direction: row; gap: 1em;">
                                <div id="welcome-left-containner">
                                    <% if ('personalize' in server && 'welcomeMensage' in server.personalize) { %>
                                        <div id="buttons-active-desactive-welcome">
                                            <label for="" class="lable-padrao">Ativar ou desativar a mensagem de boas
                                                vindas!</label>
                                            <button id="desative-welcome"
                                                class="button-padrao redColor <%= server.personalize.welcomeMensage.active == true ? '' : 'hidden' %>">Desativar
                                                mensagem</button>
                                            <button id="active-welcome"
                                                class="button-padrao greenColor <%= server.personalize.welcomeMensage.active == true ? 'hidden' : '' %>">Ativar
                                                mensagem</button>
                                        </div>
                                        <% } %>
                                            <div class="inputs-col-content">
                                                <label for="mensage-welcome" class="lable-padrao">Mensagem de boas
                                                    vindas!</label>
                                                <textarea required type="text" style="height: 6em;" class="input-padrao"
                                                    placeholder="Mensagem"
                                                    id="mensage-welcome"><%= 'personalize' in server && 'welcomeMensage' in server.personalize ? server.personalize.welcomeMensage.mensage :''%></textarea>
                                            </div>
                                            <div class="inputs-col-content">
                                                <label for="welcome-channel-input" class="lable-padrao">Canal de boas
                                                    vindas!</label>
                                                <div id="welcome-channel-input">

                                                </div>
                                            </div>
                                            <button id="save-mensage-welcome" class="button-padrao">Salvar
                                                Mensagem</button>
                                </div>
                                <div id="welcome-rigth-containner">

                                    <div id="welcome-buttons-containner">
                                        <div class="inputs-col-content">
                                            <label for="number-buttons-input" class="lable-padrao">Digite o numero de
                                                botões: </label>
                                            <input type="number" id="number-buttons-input"
                                                placeholder="Numero de botões..." class="input-padrao">
                                        </div>
                                        <div class="linha"></div>
                                        <div id="welcome-buttons-content">
                                            <div id="welcome-buttons-row">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </main>
        </div>
    </div>
    <div>
        <div id="serverData" data-server="<%= JSON.stringify(server) %>"></div>
        <div id="channelsData" data-channel="<%= JSON.stringify(channels) %>"></div>
        <script>
            let server = JSON.parse(document.getElementById('serverData').getAttribute('data-server'))
            let channels = JSON.parse(document.getElementById('channelsData').getAttribute('data-channel'))
            let channelItensSelectMenu = channels.map(element => {
                return {
                    name: element.name,
                    value: element.id
                }
            })
        </script>
    </div>
    <%- include('./reusable/chatLive.ejs',{user:user,chatItens:chatItens}) %>
        <%- include('./reusable/script.ejs') %>
            <script src="/public/js/personalize.js"></script>
            <script>
                let inputSelectRepostTime = new DropdownSingle('select-hour-repost-containner', [{
                        name: '1 hora',
                        value: 1
                    }, {
                        name: '2 horas',
                        value: 2
                    }, {
                        name: '3 horas',
                        value: 3
                    }, {
                        name: '4 horas',
                        value: 4
                    }, {
                        name: '5 horas',
                        value: 5
                    },
                    {
                        name: '6 horas',
                        value: 6
                    },
                    {
                        name: '7 horas',
                        value: 7
                    },
                    {
                        name: '8 horas',
                        value: 8
                    },
                    {
                        name: '9 horas',
                        value: 9
                    },
                    {
                        name: '10 horas',
                        value: 10
                    },
                    {
                        name: '11 horas',
                        value: 11
                    },
                    {
                        name: '12 horas',
                        value: 12
                    },
                    {
                        name: '13 horas',
                        value: 13
                    },
                    {
                        name: '14 horas',
                        value: 14
                    },
                    {
                        name: '15 horas',
                        value: 15
                    },
                    {
                        name: '16 horas',
                        value: 16
                    },
                    {
                        name: '17 horas',
                        value: 17
                    },
                    {
                        name: '18 horas',
                        value: 18
                    },
                    {
                        name: '19 horas',
                        value: 19
                    },
                    {
                        name: '20 horas',
                        value: 20
                    },
                    {
                        name: '21 horas',
                        value: 21
                    },
                    {
                        name: '22 horas',
                        value: 22
                    },
                    {
                        name: '23 horas',
                        value: 23
                    },
                    {
                        name: '24 horas',
                        value: 24
                    }
                ])
                document.getElementById('save-repost').addEventListener('click', async () => {
                    let hour = await inputSelectRepostTime.getValue().value
                    console.log(hour);
                    
                    if (!hour) {
                        return errorNotify('Selecione um horario!')
                    }
                    let session = await fetch('/personalize/repost', {
                        method: 'POST',
                        credentials: 'include',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            hour: hour,
                            serverID: serverID
                        }),
                    }).then(response => { return response.json() })
                    if (session.success == true) {
                        successNotify(session.data)
                    } else {
                        errorNotify(session.data)
                    }
                })
                let inputsSelectChannelWelcome = new DropdownSingle('welcome-channel-input', channelItensSelectMenu)
                document.getElementById('number-buttons-input').addEventListener('input', e => {
                    let numberButtons = e.target.value
                    if (numberButtons > 5) {
                        e.target.value = 5
                        return errorNotify("O valor de botões nao pode ser maior que 5!")
                    }
                    document.getElementById('welcome-buttons-row').innerHTML = ''
                    for (let index = 0; index < numberButtons; index++) {
                        document.getElementById('welcome-buttons-row').innerHTML += `
                    <div class="welcome-button-col">
                        <div class="welcome-button-col-label">
                            <label for="" class="lable-padrao">Digite o label do botão: </label>
                            <input type="text" id="welcome-button-label-${index}" class="input-padrao" placeholder="Nome do botão...">
                        </div>
                        <div class="welcome-button-col-link">
                            <label class="lable-padrao" for="">Canal de redirecinamento: </label>
                            <div id="welcome-select-channel-${index}-containner">
                                <input required type="text" class="input-padrao" list="welcome-select-channel-${index}-list" placeholder="selecione o canal..." id="welcome-select-channel-${index}-input">
                                <datalist id="welcome-select-channel-${index}-list">
                                    ${channelItensSelectMenu.map(element => {
                            return `
                                            <option data-channel="${element.value}" value="${element.name}"></option>
                                        `
                        })}
                                </datalist>
                            </div>
                        </div>
                    </div>
                `
                    }
                })

                document.getElementById('save-mensage-welcome').addEventListener('click', async () => {
                    let mensage = document.getElementById('mensage-welcome').value.trim()
                    if (!mensage) {
                        return errorNotify('Digite uma mensagem!')
                    }
                    let channel = inputsSelectChannelWelcome.getValue()
                    if (!channel) {
                        return errorNotify('Selecione um canal!')
                    }
                    let buttonsArray = []
                    let numberButtons = document.getElementById('number-buttons-input').value
                    if (numberButtons && numberButtons > 0) {
                        for (let index = 0; index < numberButtons; index++) {
                            const opcoes = document.getElementById(`welcome-select-channel-${index}-list`).querySelectorAll('option');
                            let channelID = null;

                            opcoes.forEach(option => {
                                if (option.value === document.getElementById(`welcome-select-channel-${index}-input`).value) {
                                    channelID = option.getAttribute('data-channel');
                                }
                            });
                            buttonsArray.push({
                                label: document.getElementById(`welcome-button-label-${index}`).value,
                                channelID: channelID
                            })
                        }
                    }
                    let session = await fetch('/personalize/welcome', {
                        method: 'POST',
                        credentials: 'include',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            mensage: document.getElementById('mensage-welcome').value,
                            buttons: buttonsArray,
                            channel: channel.value,
                            serverID: serverID
                        }),
                    }).then(response => { return response.json() })
                    if (session.success == true) {
                        successNotify('Mensagem de boas vindas salva!')
                    } else {
                        errorNotify(session.data)
                    }
                })
            </script>
</body>

</html>